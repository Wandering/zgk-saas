<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.thinkjoy.saas.dao.IUserRoleDAO">
<!--
insert
update
updateNull
deleteById
deleteByCondition
deleteByProperty
fetch
findOne
findList
findAll
queryPage
like
queryList
queryOne
count
selectMaxId
updateOrSave
selectOne
selectList
-->
    <sql id="Base_Column_List">
        id,
        role_name,
        role_desc,
        create_date
    </sql>
    <insert id="insert" parameterType="UserRole">
        INSERT INTO saas_user_role (
        role_name,
        role_desc,
        create_date
        ) VALUES (
        #{roleName},
        #{roleDesc},
        #{createDate}
        )
        <selectKey resultType="java.lang.Long" keyProperty="id">
        SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="UserRole">
        UPDATE saas_user_role
        <trim prefix="SET" suffixOverrides=",">
            <if test="roleName!=null">
                role_name = #{roleName},
            </if>
            <if test="roleDesc!=null">
                role_desc = #{roleDesc},
            </if>
            <if test="createDate!=null">
                create_date = #{createDate},
            </if>
        </trim>
        WHERE
        id = #{id}
    </update>

    <update id="updateMap">
        UPDATE saas_user_role
        <trim prefix="SET" suffixOverrides=",">
            <if test="map.roleName!=null">
                role_name = #{map.roleName},
            </if>
            <if test="map.roleDesc!=null">
                role_desc = #{map.roleDesc},
            </if>
            <if test="map.createDate!=null">
                create_date = #{map.createDate},
            </if>
        </trim>
        WHERE
        id = #{map.id}
    </update>

    <update id="updateByCondition">
        UPDATE saas_user_role
        <trim prefix="SET" suffixOverrides=",">
            <if test="update.roleName!=null">
                role_name = #{update.roleName},
            </if>
            <if test="update.roleDesc!=null">
                role_desc = #{update.roleDesc},
            </if>
            <if test="update.createDate!=null">
                create_date = #{update.createDate},
            </if>
        </trim>

        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.roleName!=null">
                AND role_name = #{condition.roleName}
            </if>
            <if test="condition.roleDesc!=null">
                AND role_desc = #{condition.roleDesc}
            </if>
            <if test="condition.createDate!=null">
                AND create_date = #{condition.createDate}
            </if>
        </trim>
    </update>

    <insert id="insertMap" >
        INSERT INTO saas_user_role (
                role_name,
                role_desc,
                create_date
        ) VALUES (
                    #{map.roleName},
                    #{map.roleDesc},
                    #{map.createDate}
        )
    </insert>


    <update id="updateNull" parameterType="UserRole">
        UPDATE saas_user_role
        <trim prefix="SET" suffixOverrides=",">
            role_name = #{roleName},
            role_desc = #{roleDesc},
            create_date = #{createDate},
        </trim>
        WHERE
        id = #{id} 
    </update>

    <!-- 按Id删除 -->
    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM saas_user_role
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
    </delete>


    <delete id="deleteByCondition" parameterType="java.util.Map">
        DELETE FROM saas_user_role
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="id!=null">
                AND id = #{id}
            </if>
            <if test="roleName!=null">
                AND role_name = #{roleName}
            </if>
            <if test="roleDesc!=null">
                AND role_desc = #{roleDesc}
            </if>
            <if test="createDate!=null">
                AND create_date = #{createDate}
            </if>
        </trim>
    </delete>

    <delete id="deleteByProperty" parameterType="java.util.Map">
        DELETE FROM saas_user_role WHERE
        ${property} = #{value}
    </delete>

    <select id="fetch" parameterType="java.lang.Integer" resultType="UserRole">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_user_role
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="findOne" parameterType="java.util.Map" resultType="UserRole">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_user_role WHERE
        ${property} = #{value}
        LIMIT 0,1
    </select>

    <select id="findList" parameterType="java.util.Map" resultType="UserRole">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_user_role WHERE
        ${property} = #{value}
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="findAll" resultType="UserRole">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_user_role
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryPage" resultType="UserRole">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_user_role
        <where>

            <if test="condition.whereSql != null">
                and id in (#{condition.whereSql})
            </if>

            <if test="condition.id!=null">
                ${condition.groupOp}   id  ${condition.id.op}  #{condition.id.data}
            </if>
            <if test="condition.roleName!=null">
                ${condition.groupOp}   role_name  ${condition.role_name.op}  #{condition.role_name.data}
            </if>
            <if test="condition.roleDesc!=null">
                ${condition.groupOp}   role_desc  ${condition.role_desc.op}  #{condition.role_desc.data}
            </if>
            <if test="condition.createDate!=null">
                ${condition.groupOp}   create_date  ${condition.create_date.op}  #{condition.create_date.data}
            </if>


    </where>

        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
        <if test="offset != null">
            limit ${offset}, ${rows}
        </if>
    </select>

    <select id="like" parameterType="java.util.Map" resultType="UserRole">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_user_role
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="id!=null">
                AND id like CONCAT('%', #{id} , '%')
            </if>
            <if test="roleName!=null">
                AND role_name like CONCAT('%', #{roleName} , '%')
            </if>
            <if test="roleDesc!=null">
                AND role_desc like CONCAT('%', #{roleDesc} , '%')
            </if>
            <if test="createDate!=null">
                AND create_date like CONCAT('%', #{createDate} , '%')
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>


    <select id="queryList" parameterType="java.util.Map" resultType="UserRole">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_user_role
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.roleName!=null">
                AND role_name = #{condition.roleName}
            </if>
            <if test="condition.roleDesc!=null">
                AND role_desc = #{condition.roleDesc}
            </if>
            <if test="condition.createDate!=null">
                AND create_date = #{condition.createDate}
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryOne" parameterType="java.util.Map" resultType="UserRole">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_user_role
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.roleName!=null">
                AND role_name = #{condition.roleName}
            </if>
            <if test="condition.roleDesc!=null">
                AND role_desc = #{condition.roleDesc}
            </if>
            <if test="condition.createDate!=null">
                AND create_date = #{condition.createDate}
            </if>
        </trim>
        limit 0,1
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT count(id) FROM saas_user_role
       <where>
           <if test="id!=null">
               ${groupOp} id ${id.op}  #{id.data}
           </if>
           <if test="roleName!=null">
               ${groupOp} role_name ${role_name.op}  #{role_name.data}
           </if>
           <if test="roleDesc!=null">
               ${groupOp} role_desc ${role_desc.op}  #{role_desc.data}
           </if>
           <if test="createDate!=null">
               ${groupOp} create_date ${create_date.op}  #{create_date.data}
           </if>

       </where>
    <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
    </if>
    </select>

    <select id="selectMaxId" resultType="java.lang.Integer">
        SELECT
        MAX(id)
        FROM saas_user_role
    </select>

</mapper>

