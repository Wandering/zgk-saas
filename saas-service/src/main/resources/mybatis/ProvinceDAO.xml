<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.thinkjoy.saas.dao.IProvinceDAO">
<!--
insert
update
updateNull
deleteById
deleteByCondition
deleteByProperty
fetch
findOne
findList
findAll
queryPage
like
queryList
queryOne
count
selectMaxId
updateOrSave
selectOne
selectList
-->
    <sql id="Base_Column_List">
        id,
        status,
        name,
        code
    </sql>
    <insert id="insert" parameterType="Province">
        INSERT INTO saas_province (
        status,
        name,
        code
        ) VALUES (
        #{status},
        #{name},
        #{code}
        )
        <selectKey resultType="java.lang.Long" keyProperty="id">
        SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="Province">
        UPDATE saas_province
        <trim prefix="SET" suffixOverrides=",">
            <if test="status!=null">
                status = #{status},
            </if>
            <if test="name!=null">
                name = #{name},
            </if>
            <if test="code!=null">
                code = #{code},
            </if>
        </trim>
        WHERE
        id = #{id}
    </update>

    <update id="updateMap">
        UPDATE saas_province
        <trim prefix="SET" suffixOverrides=",">
            <if test="map.status!=null">
                status = #{map.status},
            </if>
            <if test="map.name!=null">
                name = #{map.name},
            </if>
            <if test="map.code!=null">
                code = #{map.code},
            </if>
        </trim>
        WHERE
        id = #{map.id}
    </update>

    <update id="updateByCondition">
        UPDATE saas_province
        <trim prefix="SET" suffixOverrides=",">
            <if test="update.status!=null">
                status = #{update.status},
            </if>
            <if test="update.name!=null">
                name = #{update.name},
            </if>
            <if test="update.code!=null">
                code = #{update.code},
            </if>
        </trim>

        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.status!=null">
                AND status = #{condition.status}
            </if>
            <if test="condition.name!=null">
                AND name = #{condition.name}
            </if>
            <if test="condition.code!=null">
                AND code = #{condition.code}
            </if>
        </trim>
    </update>

    <insert id="insertMap" >
        INSERT INTO saas_province (
                status,
                name,
                code
        ) VALUES (
                    #{map.status},
                    #{map.name},
                    #{map.code}
        )
    </insert>


    <update id="updateNull" parameterType="Province">
        UPDATE saas_province
        <trim prefix="SET" suffixOverrides=",">
            status = #{status},
            name = #{name},
            code = #{code},
        </trim>
        WHERE
        id = #{id} 
    </update>

    <!-- 按Id删除 -->
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM saas_province
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
    </delete>


    <delete id="deleteByCondition" parameterType="java.util.Map">
        DELETE FROM saas_province
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="id!=null">
                AND id = #{id}
            </if>
            <if test="status!=null">
                AND status = #{status}
            </if>
            <if test="name!=null">
                AND name = #{name}
            </if>
            <if test="code!=null">
                AND code = #{code}
            </if>
        </trim>
    </delete>

    <delete id="deleteByProperty" parameterType="java.util.Map">
        DELETE FROM saas_province WHERE
        ${property} = #{value}
    </delete>

    <select id="fetch" parameterType="java.lang.Long" resultType="Province">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_province
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="findOne" parameterType="java.util.Map" resultType="Province">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_province WHERE
        ${property} = #{value}
        LIMIT 0,1
    </select>

    <select id="findList" parameterType="java.util.Map" resultType="Province">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_province WHERE
        ${property} = #{value}
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="findAll" resultType="Province">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_province
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryPage" resultType="Province">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_province
        <where>

            <if test="condition.whereSql != null">
                and id in (#{condition.whereSql})
            </if>

            <if test="condition.id!=null">
                ${condition.groupOp}   id  ${condition.id.op}  #{condition.id.data}
            </if>
            <if test="condition.status!=null">
                ${condition.groupOp}   status  ${condition.status.op}  #{condition.status.data}
            </if>
            <if test="condition.name!=null">
                ${condition.groupOp}   name  ${condition.name.op}  #{condition.name.data}
            </if>
            <if test="condition.code!=null">
                ${condition.groupOp}   code  ${condition.code.op}  #{condition.code.data}
            </if>


    </where>

        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
        <if test="offset != null">
            limit ${offset}, ${rows}
        </if>
    </select>

    <select id="like" parameterType="java.util.Map" resultType="Province">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_province
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="id!=null">
                AND id like CONCAT('%', #{id} , '%')
            </if>
            <if test="status!=null">
                AND status like CONCAT('%', #{status} , '%')
            </if>
            <if test="name!=null">
                AND name like CONCAT('%', #{name} , '%')
            </if>
            <if test="code!=null">
                AND code like CONCAT('%', #{code} , '%')
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>


    <select id="queryList" parameterType="java.util.Map" resultType="Province">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_province
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.status!=null">
                AND status = #{condition.status}
            </if>
            <if test="condition.name!=null">
                AND name = #{condition.name}
            </if>
            <if test="condition.code!=null">
                AND code = #{condition.code}
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryOne" parameterType="java.util.Map" resultType="Province">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_province
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.status!=null">
                AND status = #{condition.status}
            </if>
            <if test="condition.name!=null">
                AND name = #{condition.name}
            </if>
            <if test="condition.code!=null">
                AND code = #{condition.code}
            </if>
        </trim>
        limit 0,1
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT count(id) FROM saas_province
       <where>
           <if test="id!=null">
               ${groupOp} id ${id.op}  #{id.data}
           </if>
           <if test="status!=null">
               ${groupOp} status ${status.op}  #{status.data}
           </if>
           <if test="name!=null">
               ${groupOp} name ${name.op}  #{name.data}
           </if>
           <if test="code!=null">
               ${groupOp} code ${code.op}  #{code.data}
           </if>

       </where>
    <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
    </if>
    </select>

    <select id="selectMaxId" resultType="java.lang.Long">
        SELECT
        MAX(id)
        FROM saas_province
    </select>

</mapper>

