<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.thinkjoy.saas.dao.IJwTeacherDAO">
<!--
insert
update
updateNull
deleteById
deleteByCondition
deleteByProperty
fetch
findOne
findList
findAll
queryPage
like
queryList
queryOne
count
selectMaxId
updateOrSave
selectOne
selectList
-->
<sql id="Base_Column_List">
    id as id,
    teach_num as teachNum,
    tn_id as tnId,
    course as course,
    teacher_id as teacherId,
    task_id as taskId,
    class_id as classId
        </sql>
<insert id="insert" parameterType="JwTeacher">
INSERT INTO saas_jw_teacher (
teach_num,
tn_id,
course,
teacher_id,
task_id,
class_id
        ) VALUES (
#{teachNum},
#{tnId},
#{course},
#{teacherId},
#{taskId},
#{classId}
        )
<selectKey resultType="java.lang.Long" keyProperty="id">
SELECT LAST_INSERT_ID() AS ID
</selectKey>
        </insert>

        <!-- 更新 -->
<update id="update" parameterType="JwTeacher">
UPDATE saas_jw_teacher
<trim prefix="SET" suffixOverrides=",">
    <if test="teachNum!=null">
        teach_num = #{teachNum},
    </if>
    <if test="tnId!=null">
        tn_id = #{tnId},
    </if>
    <if test="course!=null">
        course = #{course},
    </if>
    <if test="teacherId!=null">
        teacher_id = #{teacherId},
    </if>
    <if test="taskId!=null">
        task_id = #{taskId},
    </if>
    <if test="classId!=null">
        class_id = #{classId},
    </if>
</trim>
        WHERE
        id = #{id}
        </update>

<update id="updateMap">
UPDATE saas_jw_teacher
<trim prefix="SET" suffixOverrides=",">
    <if test="map.teachNum!=null">
        teach_num = #{map.teachNum},
    </if>
    <if test="map.tnId!=null">
        tn_id = #{map.tnId},
    </if>
    <if test="map.course!=null">
        course = #{map.course},
    </if>
    <if test="map.teacherId!=null">
        teacher_id = #{map.teacherId},
    </if>
    <if test="map.taskId!=null">
        task_id = #{map.taskId},
    </if>
    <if test="map.classId!=null">
        class_id = #{map.classId},
    </if>
</trim>
        WHERE
        id = #{map.id}
        </update>

<update id="updateByCondition">
UPDATE saas_jw_teacher
<trim prefix="SET" suffixOverrides=",">
    <if test="update.teachNum!=null">
        teach_num = #{update.teachNum},
    </if>
    <if test="update.tnId!=null">
        tn_id = #{update.tnId},
    </if>
    <if test="update.course!=null">
        course = #{update.course},
    </if>
    <if test="update.teacherId!=null">
        teacher_id = #{update.teacherId},
    </if>
    <if test="update.taskId!=null">
        task_id = #{update.taskId},
    </if>
    <if test="update.classId!=null">
        class_id = #{update.classId},
    </if>
</trim>

<trim prefix="WHERE" prefixOverrides="AND | OR">
<if test="condition.id!=null">
    AND id = #{condition.id}
</if>
<if test="condition.teachNum!=null">
    AND teach_num = #{condition.teachNum}
</if>
<if test="condition.tnId!=null">
    AND tn_id = #{condition.tnId}
</if>
<if test="condition.course!=null">
    AND course = #{condition.course}
</if>
<if test="condition.teacherId!=null">
    AND teacher_id = #{condition.teacherId}
</if>
<if test="condition.taskId!=null">
    AND task_id = #{condition.taskId}
</if>
<if test="condition.classId!=null">
    AND class_id = #{condition.classId}
</if>
        </trim>
        </update>

<insert id="insertMap" >
INSERT INTO saas_jw_teacher (
teach_num,
tn_id,
course,
teacher_id,
task_id,
class_id
        ) VALUES (
#{map.teachNum},
#{map.tnId},
#{map.course},
#{map.teacherId},
#{map.taskId},
#{map.classId}
        )
        </insert>


<update id="updateNull" parameterType="JwTeacher">
UPDATE saas_jw_teacher
<trim prefix="SET" suffixOverrides=",">
    teach_num = #{teachNum},
    tn_id = #{tnId},
    course = #{course},
    teacher_id = #{teacherId},
    task_id = #{taskId},
    class_id = #{classId},
</trim>
        WHERE
        id = #{id}
        </update>

        <!-- 按Id删除 -->
<delete id="deleteById" parameterType="java.lang.Integer">
DELETE FROM saas_jw_teacher
<trim prefix="WHERE" prefixOverrides="AND | OR">
    AND id = #{id}
</trim>
        </delete>


<delete id="deleteByCondition" parameterType="java.util.Map">
DELETE FROM saas_jw_teacher
<trim prefix="WHERE" prefixOverrides="AND | OR">
    <if test="id!=null">
        AND id = #{id}
    </if>
    <if test="teachNum!=null">
        AND teach_num = #{teachNum}
    </if>
    <if test="tnId!=null">
        AND tn_id = #{tnId}
    </if>
    <if test="course!=null">
        AND course = #{course}
    </if>
    <if test="teacherId!=null">
        AND teacher_id = #{teacherId}
    </if>
    <if test="taskId!=null">
        AND task_id = #{taskId}
    </if>
    <if test="classId!=null">
        AND class_id = #{classId}
    </if>
</trim>
        </delete>

<delete id="deleteByProperty" parameterType="java.util.Map">
DELETE FROM saas_jw_teacher WHERE
${property} = #{value}
</delete>

<select id="fetch" parameterType="java.lang.Integer" resultType="JwTeacher">
SELECT
<include refid="Base_Column_List" />
FROM saas_jw_teacher
<trim prefix="WHERE" prefixOverrides="AND | OR">
    AND id = #{id}
</trim>
        </select>

<select id="findOne" parameterType="java.util.Map" resultType="JwTeacher">
SELECT
<include refid="Base_Column_List" />
FROM saas_jw_teacher WHERE
${property} = #{value}
LIMIT 0,1
</select>

<select id="findList" parameterType="java.util.Map" resultType="JwTeacher">
SELECT
<include refid="Base_Column_List" />
FROM saas_jw_teacher WHERE
${property} = #{value}
<if test="orderBy!=null">
    ORDER BY ${orderBy} ${sortBy}
</if>
</select>

<select id="findAll" resultType="JwTeacher">
SELECT
<include refid="Base_Column_List" />
FROM saas_jw_teacher
<if test="orderBy!=null">
    ORDER BY ${orderBy} ${sortBy}
</if>
</select>

<select id="queryPage" resultType="JwTeacher">
SELECT
<include refid="Base_Column_List" />
FROM saas_jw_teacher
<where>

    <if test="condition.whereSql != null">
        and id in (#{condition.whereSql})
    </if>

    <if test="condition.id!=null">
        ${condition.groupOp}   id  ${condition.id.op}  #{condition.id.data}
    </if>
    <if test="condition.teachNum!=null">
        ${condition.groupOp}   teach_num  ${condition.teachNum.op}  #{condition.teachNum.data}
    </if>
    <if test="condition.tnId!=null">
        ${condition.groupOp}   tn_id  ${condition.tnId.op}  #{condition.tnId.data}
    </if>
    <if test="condition.course!=null">
        ${condition.groupOp}   course  ${condition.course.op}  #{condition.course.data}
    </if>
    <if test="condition.teacherId!=null">
        ${condition.groupOp}   teacher_id  ${condition.teacherId.op}  #{condition.teacherId.data}
    </if>
    <if test="condition.taskId!=null">
        ${condition.groupOp}   task_id  ${condition.taskId.op}  #{condition.taskId.data}
    </if>
    <if test="condition.classId!=null">
        ${condition.groupOp}   class_id  ${condition.classId.op}  #{condition.classId.data}
    </if>


</where>

<if test="orderBy!=null">
ORDER BY ${orderBy} ${sortBy}
</if>
<if test="offset != null">
limit ${offset}, ${rows}
</if>
        </select>

    <select id="like" parameterType="java.util.Map" resultType="JwTeacher">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_jw_teacher
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id like CONCAT('%', #{condition.id} , '%')
            </if>
            <if test="condition.teachNum!=null">
                AND teach_num like CONCAT('%', #{condition.teachNum} , '%')
            </if>
            <if test="condition.tnId!=null">
                AND tn_id like CONCAT('%', #{condition.tnId} , '%')
            </if>
            <if test="course!=null">
                AND course like CONCAT('%', #{course} , '%')
            </if>
            <if test="condition.teacherId!=null">
                AND teacher_id like CONCAT('%', #{condition.teacherId} , '%')
            </if>
            <if test="condition.taskId!=null">
                AND task_id like CONCAT('%', #{condition.taskId} , '%')
            </if>
            <if test="condition.classId!=null">
                AND class_id like CONCAT('%', #{condition.classId} , '%')
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>


<select id="queryList" parameterType="java.util.Map" resultType="JwTeacher">
SELECT
<include refid="Base_Column_List" />
FROM saas_jw_teacher
<trim prefix="WHERE" prefixOverrides="AND | OR">
    <if test="condition.id!=null">
        AND id = #{condition.id}
    </if>
    <if test="condition.teachNum!=null">
        AND teach_num = #{condition.teachNum}
    </if>
    <if test="condition.tnId!=null">
        AND tn_id = #{condition.tnId}
    </if>
    <if test="condition.course!=null">
        AND course = #{condition.course}
    </if>
    <if test="condition.teacherId!=null">
        AND teacher_id = #{condition.teacherId}
    </if>
    <if test="condition.taskId!=null">
        AND task_id = #{condition.taskId}
    </if>
    <if test="condition.classId!=null">
        AND class_id = #{condition.classId}
    </if>
</trim>
<if test="orderBy!=null">
ORDER BY ${orderBy} ${sortBy}
</if>
        </select>

<select id="queryOne" parameterType="java.util.Map" resultType="JwTeacher">
SELECT
<include refid="Base_Column_List" />
FROM saas_jw_teacher
<trim prefix="WHERE" prefixOverrides="AND | OR">
    <if test="condition.id!=null">
        AND id = #{condition.id}
    </if>
    <if test="condition.teachNum!=null">
        AND teach_num = #{condition.teachNum}
    </if>
    <if test="condition.tnId!=null">
        AND tn_id = #{condition.tnId}
    </if>
    <if test="condition.course!=null">
        AND course = #{condition.course}
    </if>
    <if test="condition.teacherId!=null">
        AND teacher_id = #{condition.teacherId}
    </if>
    <if test="condition.taskId!=null">
        AND task_id = #{condition.taskId}
    </if>
    <if test="condition.classId!=null">
        AND class_id = #{condition.classId}
    </if>
</trim>
        limit 0,1
        </select>

<select id="count" resultType="java.lang.Integer">
SELECT count(id) FROM saas_jw_teacher
<where>
    <if test="id!=null">
        ${groupOp} id ${id.op}  #{id.data}
    </if>
    <if test="teachNum!=null">
        ${groupOp} teach_num ${teachNum.op}  #{teachNum.data}
    </if>
    <if test="tnId!=null">
        ${groupOp} tn_id ${tnId.op}  #{tnId.data}
    </if>
    <if test="course!=null">
        ${groupOp} course ${course.op}  #{course.data}
    </if>
    <if test="teacherId!=null">
        ${groupOp} teacher_id ${teacherId.op}  #{teacherId.data}
    </if>
    <if test="taskId!=null">
        ${groupOp} task_id ${taskId.op}  #{taskId.data}
    </if>
    <if test="classId!=null">
        ${groupOp} class_id ${classId.op}  #{classId.data}
    </if>

</where>
<if test="orderBy!=null">
ORDER BY ${orderBy} ${sortBy}
</if>
        </select>

<select id="selectMaxId" resultType="java.lang.Integer">
SELECT
MAX(id)
FROM saas_jw_teacher
</select>

        </mapper>

