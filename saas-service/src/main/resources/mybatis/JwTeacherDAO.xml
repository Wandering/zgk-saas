<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.thinkjoy.saas.dao.IJwTeacherDAO">
<!--
insert
update
updateNull
deleteById
deleteByCondition
deleteByProperty
fetch
findOne
findList
findAll
queryPage
like
queryList
queryOne
count
selectMaxId
updateOrSave
selectOne
selectList
-->
    <sql id="Base_Column_List">
        id,
        teach_num,
        tn_id,
        course_id,
        teacher_id
    </sql>
    <insert id="insert" parameterType="JwTeacher">
        INSERT INTO saas_jw_teacher (
        teach_num,
        tn_id,
        course_id,
        teacher_id
        ) VALUES (
        #{teachNum},
        #{tnId},
        #{courseId},
        #{teacherId}
        )
        <selectKey resultType="java.lang.Long" keyProperty="id">
        SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="JwTeacher">
        UPDATE saas_jw_teacher
        <trim prefix="SET" suffixOverrides=",">
            <if test="teachNum!=null">
                teach_num = #{teachNum},
            </if>
            <if test="tnId!=null">
                tn_id = #{tnId},
            </if>
            <if test="courseId!=null">
                course_id = #{courseId},
            </if>
            <if test="teacherId!=null">
                teacher_id = #{teacherId},
            </if>
        </trim>
        WHERE
        id = #{id}
    </update>

    <update id="updateMap">
        UPDATE saas_jw_teacher
        <trim prefix="SET" suffixOverrides=",">
            <if test="map.teachNum!=null">
                teach_num = #{map.teachNum},
            </if>
            <if test="map.tnId!=null">
                tn_id = #{map.tnId},
            </if>
            <if test="map.courseId!=null">
                course_id = #{map.courseId},
            </if>
            <if test="map.teacherId!=null">
                teacher_id = #{map.teacherId},
            </if>
        </trim>
        WHERE
        id = #{map.id}
    </update>

    <update id="updateByCondition">
        UPDATE saas_jw_teacher
        <trim prefix="SET" suffixOverrides=",">
            <if test="update.teachNum!=null">
                teach_num = #{update.teachNum},
            </if>
            <if test="update.tnId!=null">
                tn_id = #{update.tnId},
            </if>
            <if test="update.courseId!=null">
                course_id = #{update.courseId},
            </if>
            <if test="update.teacherId!=null">
                teacher_id = #{update.teacherId},
            </if>
        </trim>

        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.teachNum!=null">
                AND teach_num = #{condition.teachNum}
            </if>
            <if test="condition.tnId!=null">
                AND tn_id = #{condition.tnId}
            </if>
            <if test="condition.courseId!=null">
                AND course_id = #{condition.courseId}
            </if>
            <if test="condition.teacherId!=null">
                AND teacher_id = #{condition.teacherId}
            </if>
        </trim>
    </update>

    <insert id="insertMap" >
        INSERT INTO saas_jw_teacher (
                teach_num,
                tn_id,
                course_id,
                teacher_id
        ) VALUES (
                    #{map.teachNum},
                    #{map.tnId},
                    #{map.courseId},
                    #{map.teacherId}
        )
    </insert>


    <update id="updateNull" parameterType="JwTeacher">
        UPDATE saas_jw_teacher
        <trim prefix="SET" suffixOverrides=",">
            teach_num = #{teachNum},
            tn_id = #{tnId},
            course_id = #{courseId},
            teacher_id = #{teacherId},
        </trim>
        WHERE
        id = #{id} 
    </update>

    <!-- 按Id删除 -->
    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM saas_jw_teacher
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
    </delete>


    <delete id="deleteByCondition" parameterType="java.util.Map">
        DELETE FROM saas_jw_teacher
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="id!=null">
                AND id = #{id}
            </if>
            <if test="teachNum!=null">
                AND teach_num = #{teachNum}
            </if>
            <if test="tnId!=null">
                AND tn_id = #{tnId}
            </if>
            <if test="courseId!=null">
                AND course_id = #{courseId}
            </if>
            <if test="teacherId!=null">
                AND teacher_id = #{teacherId}
            </if>
        </trim>
    </delete>

    <delete id="deleteByProperty" parameterType="java.util.Map">
        DELETE FROM saas_jw_teacher WHERE
        ${property} = #{value}
    </delete>

    <select id="fetch" parameterType="java.lang.Integer" resultType="JwTeacher">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_jw_teacher
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="findOne" parameterType="java.util.Map" resultType="JwTeacher">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_jw_teacher WHERE
        ${property} = #{value}
        LIMIT 0,1
    </select>

    <select id="findList" parameterType="java.util.Map" resultType="JwTeacher">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_jw_teacher WHERE
        ${property} = #{value}
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="findAll" resultType="JwTeacher">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_jw_teacher
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryPage" resultType="JwTeacher">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_jw_teacher
        <where>

            <if test="condition.whereSql != null">
                and id in (#{condition.whereSql})
            </if>

            <if test="condition.id!=null">
                ${condition.groupOp}   id  ${condition.id.op}  #{condition.id.data}
            </if>
            <if test="condition.teachNum!=null">
                ${condition.groupOp}   teach_num  ${condition.teach_num.op}  #{condition.teach_num.data}
            </if>
            <if test="condition.tnId!=null">
                ${condition.groupOp}   tn_id  ${condition.tn_id.op}  #{condition.tn_id.data}
            </if>
            <if test="condition.courseId!=null">
                ${condition.groupOp}   course_id  ${condition.course_id.op}  #{condition.course_id.data}
            </if>
            <if test="condition.teacherId!=null">
                ${condition.groupOp}   teacher_id  ${condition.teacher_id.op}  #{condition.teacher_id.data}
            </if>


    </where>

        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
        <if test="offset != null">
            limit ${offset}, ${rows}
        </if>
    </select>

    <select id="like" parameterType="java.util.Map" resultType="JwTeacher">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_jw_teacher
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="id!=null">
                AND id like CONCAT('%', #{id} , '%')
            </if>
            <if test="teachNum!=null">
                AND teach_num like CONCAT('%', #{teachNum} , '%')
            </if>
            <if test="tnId!=null">
                AND tn_id like CONCAT('%', #{tnId} , '%')
            </if>
            <if test="courseId!=null">
                AND course_id like CONCAT('%', #{courseId} , '%')
            </if>
            <if test="teacherId!=null">
                AND teacher_id like CONCAT('%', #{teacherId} , '%')
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>


    <select id="queryList" parameterType="java.util.Map" resultType="JwTeacher">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_jw_teacher
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.teachNum!=null">
                AND teach_num = #{condition.teachNum}
            </if>
            <if test="condition.tnId!=null">
                AND tn_id = #{condition.tnId}
            </if>
            <if test="condition.courseId!=null">
                AND course_id = #{condition.courseId}
            </if>
            <if test="condition.teacherId!=null">
                AND teacher_id = #{condition.teacherId}
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryOne" parameterType="java.util.Map" resultType="JwTeacher">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_jw_teacher
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.teachNum!=null">
                AND teach_num = #{condition.teachNum}
            </if>
            <if test="condition.tnId!=null">
                AND tn_id = #{condition.tnId}
            </if>
            <if test="condition.courseId!=null">
                AND course_id = #{condition.courseId}
            </if>
            <if test="condition.teacherId!=null">
                AND teacher_id = #{condition.teacherId}
            </if>
        </trim>
        limit 0,1
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT count(id) FROM saas_jw_teacher
       <where>
           <if test="id!=null">
               ${groupOp} id ${id.op}  #{id.data}
           </if>
           <if test="teachNum!=null">
               ${groupOp} teach_num ${teach_num.op}  #{teach_num.data}
           </if>
           <if test="tnId!=null">
               ${groupOp} tn_id ${tn_id.op}  #{tn_id.data}
           </if>
           <if test="courseId!=null">
               ${groupOp} course_id ${course_id.op}  #{course_id.data}
           </if>
           <if test="teacherId!=null">
               ${groupOp} teacher_id ${teacher_id.op}  #{teacher_id.data}
           </if>

       </where>
    <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
    </if>
    </select>

    <select id="selectMaxId" resultType="java.lang.Integer">
        SELECT
        MAX(id)
        FROM saas_jw_teacher
    </select>

</mapper>

