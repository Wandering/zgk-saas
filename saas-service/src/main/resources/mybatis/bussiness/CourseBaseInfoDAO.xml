<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.thinkjoy.saas.dao.bussiness.ICourseBaseInfoDAO">
<!--
insert
update
updateNull
deleteById
deleteByCondition
deleteByProperty
fetch
findOne
findList
findAll
queryPage
like
queryList
queryOne
count
selectMaxId
updateOrSave
selectOne
selectList
-->
    <sql id="Base_Column_List">
        id,
        course_name as courseName,
        status as status
    </sql>
    <insert id="insert" parameterType="CourseBaseInfo">
        INSERT INTO saas_course_base_info (
        course_name,
        status
        ) VALUES (
        #{courseName},
        #{status}
        )
        <selectKey resultType="java.lang.Long" keyProperty="id">
        SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="CourseBaseInfo">
        UPDATE saas_course_base_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="courseName!=null">
                course_name = #{courseName},
            </if>
            <if test="status!=null">
                status = #{status}
            </if>
        </trim>
        WHERE
        id = #{id}
    </update>

    <update id="updateMap">
        UPDATE saas_course_base_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="map.courseName!=null">
                course_name = #{map.courseName},
            </if>
            <if test="map.status!=null">
                status = #{map.status}
            </if>
        </trim>
        WHERE
        id = #{map.id}
    </update>

    <update id="updateByCondition">
        UPDATE saas_course_base_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="update.courseName!=null">
                course_name = #{update.courseName},
            </if>
            <if test="update.status!=null">
                status = #{update.status}
            </if>
        </trim>

        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.courseName!=null">
                AND course_name = #{condition.courseName}
            </if>
            <if test="condition.status!=null">
                AND status = #{condition.status}
            </if>
        </trim>
    </update>

    <insert id="insertMap" >
        INSERT INTO saas_course_base_info (
                course_name,
                status
        ) VALUES (
                    #{map.courseName},
                    #{map.status}
        )
    </insert>


    <update id="updateNull" parameterType="CourseBaseInfo">
        UPDATE saas_course_base_info
        <trim prefix="SET" suffixOverrides=",">
            course_name = #{courseName},
            status = #{status}
        </trim>
        WHERE
        id = #{id} 
    </update>

    <!-- 按Id删除 -->
    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM saas_course_base_info
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
    </delete>


    <delete id="deleteByCondition" parameterType="java.util.Map">
        DELETE FROM saas_course_base_info
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="courseName!=null">
                AND course_name = #{courseName}
            </if>
            <if test="status!=null">
                AND status = #{status}
            </if>
        </trim>
    </delete>

    <delete id="deleteByProperty" parameterType="java.util.Map">
        DELETE FROM saas_course_base_info WHERE
        ${property} = #{value}
    </delete>

    <select id="fetch" parameterType="java.lang.Integer" resultType="CourseBaseInfo">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_course_base_info
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
    </select>

    <select id="findOne" parameterType="java.util.Map" resultType="CourseBaseInfo">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_class_rooms WHERE
        ${property} = #{value}
        LIMIT 0,1
    </select>

    <select id="findList" parameterType="java.util.Map" resultType="CourseBaseInfo">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_course_base_info WHERE
        ${property} = #{value}
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="findAll" resultType="CourseBaseInfo">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_course_base_info
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryPage" resultType="CourseBaseInfo">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_course_base_info
        <where>
            <if test="condition.whereSql != null">
                and id in (#{condition.whereSql})
            </if>

            <if test="condition.courseName!=null">
                ${condition.groupOp}   courseName  ${condition.courseName.op}  #{condition.courseName.data}
            </if>
            <if test="condition.status!=null">
                ${condition.groupOp}   status  ${condition.status.op}  #{condition.status.data}
            </if>
    </where>

        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
        <if test="offset != null">
            limit ${offset}, ${rows}
        </if>
    </select>

    <select id="like" parameterType="java.util.Map" resultType="CourseBaseInfo">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_course_base_info
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="courseName!=null">
                AND course_name like CONCAT('%', #{courseName} , '%')
            </if>
            <if test="status!=null">
                AND status like CONCAT('%', #{status} , '%')
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>



    <select id="queryList" parameterType="java.util.Map" resultType="CourseBaseInfo">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_course_base_info
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.courseName!=null">
                AND course_name = #{condition.courseName}
            </if>
            <if test="condition.status!=null">
                AND status = #{condition.status}
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryOne" parameterType="java.util.Map" resultType="CourseBaseInfo">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_course_base_info
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.courseName!=null">
                AND course_name = #{condition.courseName}
            </if>
            <if test="condition.status!=null">
                AND status = #{condition.status}
            </if>

        </trim>
        limit 0,1
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT count(id) FROM saas_course_base_info
       <where>
           <if test="courseName!=null">
               ${groupOp} course_name ${courseName.op}  #{courseName.data}
           </if>
           <if test="status!=null">
               ${groupOp} status ${status.op}  #{status.data}
           </if>
       </where>
    <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
    </if>
    </select>

    <select id="selectMaxId" resultType="java.lang.Integer">
        SELECT
        MAX(id)
        FROM saas_course_base_info
    </select>

</mapper>

