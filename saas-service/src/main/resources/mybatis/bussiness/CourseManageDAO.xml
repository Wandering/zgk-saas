<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.thinkjoy.saas.dao.bussiness.ICourseManageDAO">
    <!--
    insert
    update
    updateNull
    deleteById
    deleteByCondition
    deleteByProperty
    fetch
    findOne
    findList
    findAll
    queryPage
    like
    queryList
    queryOne
    count
    selectMaxId
    updateOrSave
    selectOne
    selectList
    -->
    <sql id="Base_Column_List">
        id,
        tn_id as tnId,
        course_base_id as courseBaseId,
        custom as custom,
        grade_id as gradeId,
        course_type as courseType,
        create_time as createTime
    </sql>
    <insert id="insert" parameterType="CourseManage">
        INSERT INTO saas_course_manage (
            tn_id,
            course_base_id,
            custom,
            grade_id,
            course_type,
            create_time
        ) VALUES (
            #{tnId},
            #{courseBaseId},
            #{custom},
            #{gradeId},
            #{courseType},
            #{createTime}
        )
        <selectKey resultType="java.lang.Long" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="CourseManage">
        UPDATE saas_course_manage
        <trim prefix="SET" suffixOverrides=",">
            <if test="tnId!=null">
                tn_id=#{tnId},
            </if>
            <if test="courseBaseId!=null">
                course_base_id = #{courseBaseId},
            </if>
            <if test="custom!=null">
                custom = #{custom},
            </if>
            <if test="gradeId!=null">
                grade_id = #{gradeId},
            </if>
            <if test="courseType!=null">
                course_type = #{courseType},
            </if>
            <if test="createTime!=null">
                create_time=#{createTime}
            </if>
        </trim>
        WHERE
        id = #{id}
    </update>

    <update id="updateMap">
        UPDATE saas_course_manage
        <trim prefix="SET" suffixOverrides=",">
            <if test="map.tnId!=null">
                tn_id=#{map.tnId},
            </if>
            <if test="map.courseBaseId!=null">
                course_base_id = #{map.courseBaseId},
            </if>
            <if test="map.custom!=null">
                custom = #{map.custom},
            </if>
            <if test="map.gradeId!=null">
                grade_id = #{map.gradeId},
            </if>
            <if test="map.courseType!=null">
                course_type = #{map.courseType},
            </if>
            <if test="map.createTime!=null">
                create_time=#{map.createTime}
            </if>
        </trim>
        WHERE
        id = #{map.id}
    </update>

    <update id="updateByCondition">
        UPDATE saas_course_manage
        <trim prefix="SET" suffixOverrides=",">
            <if test="update.tnId!=null">
                tn_id = #{update.tnId},
            </if>
            <if test="update.courseBaseId!=null">
                course_base_id = #{update.courseBaseId},
            </if>
            <if test="update.custom!=null">
                custom = #{update.custom},
            </if>
            <if test="update.gradeId!=null">
                grade_id = #{update.gradeId},
            </if>
            <if test="update.courseType!=null">
                course_type = #{update.courseType},
            </if>
            <if test="update.createTime!=null">
                create_time=#{update.createTime}
            </if>
        </trim>

        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.tnId!=null">
                AND tn_id = #{condition.tnId}
            </if>
            <if test="condition.courseBaseId!=null">
                AND course_base_id = #{condition.courseBaseId}
            </if>
            <if test="condition.custom!=null">
                AND custom = #{condition.custom}
            </if>
            <if test="condition.gradeId!=null">
                AND grade_id = #{condition.gradeId}
            </if>
            <if test="condition.courseType!=null">
                AND course_type = #{condition.courseType}
            </if>
            <if test="condition.createTime!=null">
                AND create_time=#{condition.createTime}
            </if>
        </trim>
    </update>

    <insert id="insertMap" >
        INSERT INTO saas_course_manage (
            tn_id,
            course_base_id,
            custom,
            grade_id,
            course_type,
            create_time
        ) VALUES (
            #{map.tnId},
            #{map.courseBaseId},
            #{map.custom},
            #{map.gradeId},
            #{map.courseType},
            #{map.createTime}
        )
    </insert>


    <update id="updateNull" parameterType="CourseManage">
        UPDATE saas_course_manage
        <trim prefix="SET" suffixOverrides=",">
            tn_id=#{tnId},
            course_base_id=#{courseBaseId},
            custom=#{custom},
            grade_id=#{gradeId},
            course_type=#{courseType}
        </trim>
        WHERE
        id = #{id}
    </update>

    <!-- 按Id删除 -->
    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM saas_course_manage
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
    </delete>


    <delete id="deleteByCondition" parameterType="java.util.Map">
        DELETE FROM saas_course_manage
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="tnId!=null">
                AND tn_id=#{tnId},
            </if>
            <if test="courseBaseId!=null">
                AND course_base_id = #{courseBaseId},
            </if>
            <if test="custom!=null">
                AND custom = #{custom},
            </if>
            <if test="gradeId!=null">
                AND grade_id = #{gradeId},
            </if>
            <if test="courseType!=null">
                AND course_type = #{courseType},
            </if>
            <if test="createTime!=null">
                AND create_time=#{createTime}
            </if>
        </trim>
    </delete>

    <delete id="deleteByProperty" parameterType="java.util.Map">
        DELETE FROM saas_course_manage WHERE
        ${property} = #{value}
    </delete>

    <select id="fetch" parameterType="java.lang.Integer" resultType="CourseManage">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_course_manage
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="findOne" parameterType="java.util.Map" resultType="CourseManage">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_course_manage WHERE
        ${property} = #{value}
        LIMIT 0,1
    </select>

    <select id="findList" parameterType="java.util.Map" resultType="CourseManage">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_course_manage WHERE
        ${property} = #{value}
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="findAll" resultType="CourseManage">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_course_manage
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryPage" resultType="CourseManage">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_course_manage
        <where>
            <if test="condition.whereSql != null">
                and id in (#{condition.whereSql})
            </if>
            <if test="condition.tnId!=null">
                ${condition.groupOp}   tn_id  ${condition.tnId.op}  #{condition.tnId.data}
            </if>
            <if test="condition.courseBaseId!=null">
                ${condition.groupOp}   course_base_id  ${condition.courseBaseId.op}  #{condition.courseBaseId.data}
            </if>
            <if test="condition.custom!=null">
                ${condition.groupOp}   custom  ${condition.custom.op}  #{condition.custom.data}
            </if>
            <if test="condition.gradeId!=null">
                ${condition.groupOp}   grade_id  ${condition.gradeId.op}  #{condition.gradeId.data}
            </if>
            <if test="condition.courseType!=null">
                ${condition.groupOp}   course_type  ${condition.courseType.op}  #{condition.courseType.data}
            </if>
            <if test="condition.createTime!=null">
                ${condition.groupOp}   createTime  ${condition.createTime.op}  #{condition.createTime.data}
            </if>
        </where>

        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
        <if test="offset != null">
            limit ${offset}, ${rows}
        </if>
    </select>

    <select id="like" parameterType="java.util.Map" resultType="CourseManage">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_course_manage
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="tnId!=null">
                AND tn_id like CONCAT('%', #{tnId} , '%')
            </if>
            <if test="courseBaseId!=null">
                AND course_base_id like CONCAT('%', #{courseBaseId} , '%')
            </if>
            <if test="custom!=null">
                AND custom like CONCAT('%', #{custom} , '%')
            </if>
            <if test="gradeId!=null">
                AND grade_id like CONCAT('%', #{gradeId} , '%')
            </if>
            <if test="courseType!=null">
                AND course_type like CONCAT('%', #{courseType} , '%')
            </if>
            <if test="createTime!=null">
                AND createTime like CONCAT('%', #{createTime} , '%')
            </if>
        </trim>
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>



    <select id="queryList" parameterType="java.util.Map" resultType="CourseManage">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_course_manage
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.tnId!=null">
                AND tn_id = #{condition.tnId}
            </if>
            <if test="condition.courseBaseId!=null">
                AND course_base_id = #{condition.courseBaseId}
            </if>
            <if test="condition.custom!=null">
                AND custom = #{condition.custom}
            </if>
            <if test="condition.gradeId!=null">
                AND grade_id = #{condition.gradeId}
            </if>
            <if test="condition.courseType!=null">
                AND course_type = #{condition.courseType}
            </if>
            <if test="condition.createTime!=null">
                AND createTime = #{condition.createTime}
            </if>
        </trim>
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryOne" parameterType="java.util.Map" resultType="CourseManage">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_course_manage
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.tnId!=null">
                AND tn_id = #{condition.tnId}
            </if>
            <if test="condition.courseBaseId!=null">
                AND course_base_id = #{condition.courseBaseId}
            </if>
            <if test="condition.custom!=null">
                AND custom = #{condition.custom}
            </if>
            <if test="condition.gradeId!=null">
                AND grade_id = #{condition.gradeId}
            </if>
            <if test="condition.courseType!=null">
                AND course_type = #{condition.courseType}
            </if>
            <if test="condition.createTime!=null">
                AND createTime = #{condition.createTime}
            </if>

        </trim>
        limit 0,1
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT count(id) FROM saas_course_manage
        <where>
            <if test="tnId!=null">
                ${groupOp} tn_id ${tnId.op}  #{tnId.data}
            </if>
            <if test="courseBaseId!=null">
                ${groupOp} course_base_id ${courseBaseId.op}  #{courseBaseId.data}
            </if>
            <if test="custom!=null">
                ${groupOp} custom ${custom.op}  #{custom.data}
            </if>
            <if test="gradeId!=null">
                ${groupOp} grade_id ${gradeId.op}  #{gradeId.data}
            </if>
            <if test="courseType!=null">
                ${groupOp} course_type ${courseType.op}  #{courseType.data}
            </if>
            <if test="createTime!=null">
                ${groupOp} createTime ${createTime.op}  #{createTime.data}
            </if>
        </where>
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="selectMaxId" resultType="java.lang.Integer">
        SELECT
        MAX(id)
        FROM saas_course_manage
    </select>

    <select id="selectCourseManageGroup" parameterType="java.util.Map" resultType="CourseManageVo">

        select courseManage.id as id,courseManage.course_base_id as courseId,courseBase.course_name as courseName,courseManage.grade_id as gradeId,courseManage.course_type as courseType  from saas_course_manage as courseManage inner join saas_course_base_info as courseBase on courseManage.course_base_id=courseBase.id
        <where>
            <if test="tnId!=null">
                tn_id=#{tnId}
            </if>
        </where>
        group by courseManage.course_base_id
    </select>

    <select id="selectCourseManageInfo" parameterType="java.util.Map" resultType="CourseManageVo">
        select courseManage.id as id,courseManage.course_base_id as courseId,courseBase.course_name as courseName,courseManage.grade_id as gradeId,courseManage.course_type as courseType  from saas_course_manage as courseManage inner join saas_course_base_info as courseBase on courseManage.course_base_id=courseBase.id
        <where>
             <if test="tnId!=null">
                AND tn_id=#{tnId}
             </if>
            <if test="courseBaseId!=null">
                AND course_base_id=#{courseBaseId}
            </if>
            <if test="gradeId!=null">
                AND courseManage.grade_id=#{gradeId}
            </if>
            <if test="courseType!=null">
                AND courseManage.course_Type=#{courseType}
            </if>
        </where>
    </select>

    <insert id="addCourses" useGeneratedKeys="true" parameterType="java.util.List">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        INSERT INTO saas_course_manage (
        tn_id,
        course_base_id,
        custom,
        grade_id,
        course_type,
        create_time
        ) VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.tnId},#{item.courseBaseId},#{item.custom},#{item.gradeId},#{item.courseType},#{item.createTime})
        </foreach>
    </insert>
</mapper>

