<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.thinkjoy.saas.dao.IExamDetailDAO">
<!--
insert
update
updateNull
deleteById
deleteByCondition
deleteByProperty
fetch
findOne
findList
findAll
queryPage
like
queryList
queryOne
count
selectMaxId
updateOrSave
selectOne
selectList
-->

    <sql id="Base_Column_List">
        id as id ,
        examId as examId ,
        studentName as studentName ,
        className as className ,
        yuWenScore as yuWenScore ,
        shuXueScore as shuXueScore ,
        yingYuScore as yingYuScore ,
        wuLiScore as wuLiScore ,
        huaXueScore as huaXueScore ,
        shengWuScore as shengWuScore ,
        zhengZhiScore as zhengZhiScore ,
        diLiScore as diLiScore ,
        liShiScore as liShiScore ,
        commonScore as commonScore ,
        totleScore as totleScore ,
        classRank as classRank ,
        gradeRank as gradeRank ,
        selectCourses as selectCourses 
    </sql>
    <insert id="insert" parameterType="ExamDetail">
        INSERT INTO saas_exam_detail (
        examId,
        studentName,
        className,
        yuWenScore,
        shuXueScore,
        yingYuScore,
        wuLiScore,
        huaXueScore,
        shengWuScore,
        zhengZhiScore,
        diLiScore,
        liShiScore,
        commonScore,
        totleScore,
        classRank,
        gradeRank,
        selectCourses
        ) VALUES (
        #{examId},
        #{studentName},
        #{className},
        #{yuWenScore},
        #{shuXueScore},
        #{yingYuScore},
        #{wuLiScore},
        #{huaXueScore},
        #{shengWuScore},
        #{zhengZhiScore},
        #{diLiScore},
        #{liShiScore},
        #{commonScore},
        #{totleScore},
        #{classRank},
        #{gradeRank},
        #{selectCourses}
        )
            <selectKey resultType="java.lang.Long" keyProperty="id">
                SELECT LAST_INSERT_ID() AS ID
            </selectKey>
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="ExamDetail">
        UPDATE saas_exam_detail
        <trim prefix="SET" suffixOverrides=",">
            <if test="examId!=null">
                examId = #{examId},
            </if>
            <if test="studentName!=null">
                studentName = #{studentName},
            </if>
            <if test="className!=null">
                className = #{className},
            </if>
            <if test="yuWenScore!=null">
                yuWenScore = #{yuWenScore},
            </if>
            <if test="shuXueScore!=null">
                shuXueScore = #{shuXueScore},
            </if>
            <if test="yingYuScore!=null">
                yingYuScore = #{yingYuScore},
            </if>
            <if test="wuLiScore!=null">
                wuLiScore = #{wuLiScore},
            </if>
            <if test="huaXueScore!=null">
                huaXueScore = #{huaXueScore},
            </if>
            <if test="shengWuScore!=null">
                shengWuScore = #{shengWuScore},
            </if>
            <if test="zhengZhiScore!=null">
                zhengZhiScore = #{zhengZhiScore},
            </if>
            <if test="diLiScore!=null">
                diLiScore = #{diLiScore},
            </if>
            <if test="liShiScore!=null">
                liShiScore = #{liShiScore},
            </if>
            <if test="commonScore!=null">
                commonScore = #{commonScore},
            </if>
            <if test="totleScore!=null">
                totleScore = #{totleScore},
            </if>
            <if test="classRank!=null">
                classRank = #{classRank},
            </if>
            <if test="gradeRank!=null">
                gradeRank = #{gradeRank},
            </if>
            <if test="selectCourses!=null">
                selectCourses = #{selectCourses},
            </if>
        </trim>
        WHERE
        id = #{id}
    </update>

    <update id="updateMap">
        UPDATE saas_exam_detail
        <trim prefix="SET" suffixOverrides=",">
            <if test="map.examId!=null">
                examId = #{map.examId},
            </if>
            <if test="map.studentName!=null">
                studentName = #{map.studentName},
            </if>
            <if test="map.className!=null">
                className = #{map.className},
            </if>
            <if test="map.yuWenScore!=null">
                yuWenScore = #{map.yuWenScore},
            </if>
            <if test="map.shuXueScore!=null">
                shuXueScore = #{map.shuXueScore},
            </if>
            <if test="map.yingYuScore!=null">
                yingYuScore = #{map.yingYuScore},
            </if>
            <if test="map.wuLiScore!=null">
                wuLiScore = #{map.wuLiScore},
            </if>
            <if test="map.huaXueScore!=null">
                huaXueScore = #{map.huaXueScore},
            </if>
            <if test="map.shengWuScore!=null">
                shengWuScore = #{map.shengWuScore},
            </if>
            <if test="map.zhengZhiScore!=null">
                zhengZhiScore = #{map.zhengZhiScore},
            </if>
            <if test="map.diLiScore!=null">
                diLiScore = #{map.diLiScore},
            </if>
            <if test="map.liShiScore!=null">
                liShiScore = #{map.liShiScore},
            </if>
            <if test="map.commonScore!=null">
                commonScore = #{map.commonScore},
            </if>
            <if test="map.totleScore!=null">
                totleScore = #{map.totleScore},
            </if>
            <if test="map.classRank!=null">
                classRank = #{map.classRank},
            </if>
            <if test="map.gradeRank!=null">
                gradeRank = #{map.gradeRank},
            </if>
            <if test="map.selectCourses!=null">
                selectCourses = #{map.selectCourses},
            </if>
        </trim>
        WHERE
        id = #{map.id}
    </update>

    <update id="updateByCondition">
        UPDATE saas_exam_detail
        <trim prefix="SET" suffixOverrides=",">
            <if test="update.examId!=null">
                examId = #{update.examId},
            </if>
            <if test="update.studentName!=null">
                studentName = #{update.studentName},
            </if>
            <if test="update.className!=null">
                className = #{update.className},
            </if>
            <if test="update.yuWenScore!=null">
                yuWenScore = #{update.yuWenScore},
            </if>
            <if test="update.shuXueScore!=null">
                shuXueScore = #{update.shuXueScore},
            </if>
            <if test="update.yingYuScore!=null">
                yingYuScore = #{update.yingYuScore},
            </if>
            <if test="update.wuLiScore!=null">
                wuLiScore = #{update.wuLiScore},
            </if>
            <if test="update.huaXueScore!=null">
                huaXueScore = #{update.huaXueScore},
            </if>
            <if test="update.shengWuScore!=null">
                shengWuScore = #{update.shengWuScore},
            </if>
            <if test="update.zhengZhiScore!=null">
                zhengZhiScore = #{update.zhengZhiScore},
            </if>
            <if test="update.diLiScore!=null">
                diLiScore = #{update.diLiScore},
            </if>
            <if test="update.liShiScore!=null">
                liShiScore = #{update.liShiScore},
            </if>
            <if test="update.commonScore!=null">
                commonScore = #{update.commonScore},
            </if>
            <if test="update.totleScore!=null">
                totleScore = #{update.totleScore},
            </if>
            <if test="update.classRank!=null">
                classRank = #{update.classRank},
            </if>
            <if test="update.gradeRank!=null">
                gradeRank = #{update.gradeRank},
            </if>
            <if test="update.selectCourses!=null">
                selectCourses = #{update.selectCourses},
            </if>
        </trim>

        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.examId!=null">
                AND examId = #{condition.examId}
            </if>
            <if test="condition.studentName!=null">
                AND studentName = #{condition.studentName}
            </if>
            <if test="condition.className!=null">
                AND className = #{condition.className}
            </if>
            <if test="condition.yuWenScore!=null">
                AND yuWenScore = #{condition.yuWenScore}
            </if>
            <if test="condition.shuXueScore!=null">
                AND shuXueScore = #{condition.shuXueScore}
            </if>
            <if test="condition.yingYuScore!=null">
                AND yingYuScore = #{condition.yingYuScore}
            </if>
            <if test="condition.wuLiScore!=null">
                AND wuLiScore = #{condition.wuLiScore}
            </if>
            <if test="condition.huaXueScore!=null">
                AND huaXueScore = #{condition.huaXueScore}
            </if>
            <if test="condition.shengWuScore!=null">
                AND shengWuScore = #{condition.shengWuScore}
            </if>
            <if test="condition.zhengZhiScore!=null">
                AND zhengZhiScore = #{condition.zhengZhiScore}
            </if>
            <if test="condition.diLiScore!=null">
                AND diLiScore = #{condition.diLiScore}
            </if>
            <if test="condition.liShiScore!=null">
                AND liShiScore = #{condition.liShiScore}
            </if>
            <if test="condition.commonScore!=null">
                AND commonScore = #{condition.commonScore}
            </if>
            <if test="condition.totleScore!=null">
                AND totleScore = #{condition.totleScore}
            </if>
            <if test="condition.classRank!=null">
                AND classRank = #{condition.classRank}
            </if>
            <if test="condition.gradeRank!=null">
                AND gradeRank = #{condition.gradeRank}
            </if>
            <if test="condition.selectCourses!=null">
                AND selectCourses = #{condition.selectCourses}
            </if>
        </trim>
    </update>

    <insert id="insertMap" >
        INSERT INTO saas_exam_detail (
                examId,
                studentName,
                className,
                yuWenScore,
                shuXueScore,
                yingYuScore,
                wuLiScore,
                huaXueScore,
                shengWuScore,
                zhengZhiScore,
                diLiScore,
                liShiScore,
                commonScore,
                totleScore,
                classRank,
                gradeRank,
                selectCourses
        ) VALUES (
                    #{map.examId},
                    #{map.studentName},
                    #{map.className},
                    #{map.yuWenScore},
                    #{map.shuXueScore},
                    #{map.yingYuScore},
                    #{map.wuLiScore},
                    #{map.huaXueScore},
                    #{map.shengWuScore},
                    #{map.zhengZhiScore},
                    #{map.diLiScore},
                    #{map.liShiScore},
                    #{map.commonScore},
                    #{map.totleScore},
                    #{map.classRank},
                    #{map.gradeRank},
                    #{map.selectCourses}
        )
    </insert>


    <update id="updateNull" parameterType="ExamDetail">
        UPDATE saas_exam_detail
        <trim prefix="SET" suffixOverrides=",">
            examId = #{examId},
            studentName = #{studentName},
            className = #{className},
            yuWenScore = #{yuWenScore},
            shuXueScore = #{shuXueScore},
            yingYuScore = #{yingYuScore},
            wuLiScore = #{wuLiScore},
            huaXueScore = #{huaXueScore},
            shengWuScore = #{shengWuScore},
            zhengZhiScore = #{zhengZhiScore},
            diLiScore = #{diLiScore},
            liShiScore = #{liShiScore},
            commonScore = #{commonScore},
            totleScore = #{totleScore},
            classRank = #{classRank},
            gradeRank = #{gradeRank},
            selectCourses = #{selectCourses},
        </trim>
        WHERE
        id = #{id} 
    </update>

    <!-- 按Id删除 -->
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM saas_exam_detail
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
    </delete>


    <delete id="deleteByCondition" parameterType="java.util.Map">
        DELETE FROM saas_exam_detail
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="id!=null">
                AND id = #{id}
            </if>
            <if test="examId!=null">
                AND examId = #{examId}
            </if>
            <if test="studentName!=null">
                AND studentName = #{studentName}
            </if>
            <if test="className!=null">
                AND className = #{className}
            </if>
            <if test="yuWenScore!=null">
                AND yuWenScore = #{yuWenScore}
            </if>
            <if test="shuXueScore!=null">
                AND shuXueScore = #{shuXueScore}
            </if>
            <if test="yingYuScore!=null">
                AND yingYuScore = #{yingYuScore}
            </if>
            <if test="wuLiScore!=null">
                AND wuLiScore = #{wuLiScore}
            </if>
            <if test="huaXueScore!=null">
                AND huaXueScore = #{huaXueScore}
            </if>
            <if test="shengWuScore!=null">
                AND shengWuScore = #{shengWuScore}
            </if>
            <if test="zhengZhiScore!=null">
                AND zhengZhiScore = #{zhengZhiScore}
            </if>
            <if test="diLiScore!=null">
                AND diLiScore = #{diLiScore}
            </if>
            <if test="liShiScore!=null">
                AND liShiScore = #{liShiScore}
            </if>
            <if test="commonScore!=null">
                AND commonScore = #{commonScore}
            </if>
            <if test="totleScore!=null">
                AND totleScore = #{totleScore}
            </if>
            <if test="classRank!=null">
                AND classRank = #{classRank}
            </if>
            <if test="gradeRank!=null">
                AND gradeRank = #{gradeRank}
            </if>
            <if test="selectCourses!=null">
                AND selectCourses = #{selectCourses}
            </if>
        </trim>
    </delete>

    <delete id="deleteByProperty" parameterType="java.util.Map">
        DELETE FROM saas_exam_detail WHERE
        ${property} = #{value}
    </delete>

    <select id="fetch" parameterType="java.lang.Long" resultType="ExamDetail">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_exam_detail
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
    </select>

    <select id="findOne" parameterType="java.util.Map" resultType="ExamDetail">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_exam_detail WHERE
        ${property} = #{value}
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
        LIMIT 0,1
    </select>

    <select id="findList" parameterType="java.util.Map" resultType="ExamDetail">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_exam_detail WHERE
        ${property} = #{value}
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="findAll" resultType="ExamDetail">
        SELECT
        <include refid="Base_Column_List" />
        FROM saas_exam_detail
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryPage" resultType="ExamDetail">
        SELECT  detail.id as id ,
                examId as examId ,
                studentName as studentName ,
                className as className ,
                yuWenScore as yuWenScore ,
                shuXueScore as shuXueScore ,
                yingYuScore as yingYuScore ,
                wuLiScore as wuLiScore ,
                huaXueScore as huaXueScore ,
                shengWuScore as shengWuScore ,
                zhengZhiScore as zhengZhiScore ,
                diLiScore as diLiScore ,
                liShiScore as liShiScore ,
                commonScore as commonScore ,
                totleScore as totleScore ,
                classRank as classRank ,
                gradeRank as gradeRank ,
                selectCourses as selectCourses
                FROM saas_exam_detail detail
                inner join saas_exam exam on detail.examId= exam.id
        <where>
            <if test="condition.whereSql != null">
                and id in (#{condition.whereSql})
            </if>
            <if test="condition.id!=null">
                ${condition.groupOp}   ${condition.id.field}  ${condition.id.op}  #{condition.id.data}
            </if>
            <if test="condition.examId!=null">
                ${condition.groupOp}   ${condition.examId.field}  ${condition.examId.op}  #{condition.examId.data}
            </if>
            <if test="condition.studentName!=null">
                ${condition.groupOp}   ${condition.studentName.field}  ${condition.studentName.op}  #{condition.studentName.data}
            </if>
            <if test="condition.className!=null">
                ${condition.groupOp}   ${condition.className.field}  ${condition.className.op}  #{condition.className.data}
            </if>
            <if test="condition.yuWenScore!=null">
                ${condition.groupOp}   ${condition.yuWenScore.field}  ${condition.yuWenScore.op}  #{condition.yuWenScore.data}
            </if>
            <if test="condition.shuXueScore!=null">
                ${condition.groupOp}   ${condition.shuXueScore.field}  ${condition.shuXueScore.op}  #{condition.shuXueScore.data}
            </if>
            <if test="condition.yingYuScore!=null">
                ${condition.groupOp}   ${condition.yingYuScore.field}  ${condition.yingYuScore.op}  #{condition.yingYuScore.data}
            </if>
            <if test="condition.wuLiScore!=null">
                ${condition.groupOp}   ${condition.wuLiScore.field}  ${condition.wuLiScore.op}  #{condition.wuLiScore.data}
            </if>
            <if test="condition.huaXueScore!=null">
                ${condition.groupOp}   ${condition.huaXueScore.field}  ${condition.huaXueScore.op}  #{condition.huaXueScore.data}
            </if>
            <if test="condition.shengWuScore!=null">
                ${condition.groupOp}   ${condition.shengWuScore.field}  ${condition.shengWuScore.op}  #{condition.shengWuScore.data}
            </if>
            <if test="condition.zhengZhiScore!=null">
                ${condition.groupOp}   ${condition.zhengZhiScore.field}  ${condition.zhengZhiScore.op}  #{condition.zhengZhiScore.data}
            </if>
            <if test="condition.diLiScore!=null">
                ${condition.groupOp}   ${condition.diLiScore.field}  ${condition.diLiScore.op}  #{condition.diLiScore.data}
            </if>
            <if test="condition.liShiScore!=null">
                ${condition.groupOp}   ${condition.liShiScore.field}  ${condition.liShiScore.op}  #{condition.liShiScore.data}
            </if>
            <if test="condition.commonScore!=null">
                ${condition.groupOp}   ${condition.commonScore.field}  ${condition.commonScore.op}  #{condition.commonScore.data}
            </if>
            <if test="condition.totleScore!=null">
                ${condition.groupOp}   ${condition.totleScore.field}  ${condition.totleScore.op}  #{condition.totleScore.data}
            </if>
            <if test="condition.classRank!=null">
                ${condition.groupOp}   ${condition.classRank.field}  ${condition.classRank.op}  #{condition.classRank.data}
            </if>
            <if test="condition.gradeRank!=null">
                ${condition.groupOp}   ${condition.gradeRank.field}  ${condition.gradeRank.op}  #{condition.gradeRank.data}
            </if>
            <if test="condition.selectCourses!=null">
                ${condition.groupOp}   ${condition.selectCourses.field}  ${condition.selectCourses.op}  #{condition.selectCourses.data}
            </if>
            <if test="condition.grade!=null">
                ${condition.groupOp}   ${condition.grade.field}  ${condition.grade.op}  #{condition.grade.data}
            </if>
    </where>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
        <if test="offset != null">
            limit ${offset}, ${rows}
        </if>
    </select>

    <select id="like" parameterType="java.util.Map" resultType="ExamDetail">
        SELECT
        <if test="selector!=null">
            <trim prefixOverrides=",">
                    <if test="selector.id!=null">
                        , id
                    </if>
                    <if test="selector.examId!=null">
                        , examId
                    </if>
                    <if test="selector.studentName!=null">
                        , studentName
                    </if>
                    <if test="selector.className!=null">
                        , className
                    </if>
                    <if test="selector.yuWenScore!=null">
                        , yuWenScore
                    </if>
                    <if test="selector.shuXueScore!=null">
                        , shuXueScore
                    </if>
                    <if test="selector.yingYuScore!=null">
                        , yingYuScore
                    </if>
                    <if test="selector.wuLiScore!=null">
                        , wuLiScore
                    </if>
                    <if test="selector.huaXueScore!=null">
                        , huaXueScore
                    </if>
                    <if test="selector.shengWuScore!=null">
                        , shengWuScore
                    </if>
                    <if test="selector.zhengZhiScore!=null">
                        , zhengZhiScore
                    </if>
                    <if test="selector.diLiScore!=null">
                        , diLiScore
                    </if>
                    <if test="selector.liShiScore!=null">
                        , liShiScore
                    </if>
                    <if test="selector.commonScore!=null">
                        , commonScore
                    </if>
                    <if test="selector.totleScore!=null">
                        , totleScore
                    </if>
                    <if test="selector.classRank!=null">
                        , classRank
                    </if>
                    <if test="selector.gradeRank!=null">
                        , gradeRank
                    </if>
                    <if test="selector.selectCourses!=null">
                        , selectCourses
                    </if>
            </trim>
        </if>
        <if test="selector==null">
            <include refid="Base_Column_List" />
        </if>
        FROM saas_exam_detail
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id like CONCAT('%', #{condition.id} , '%')
            </if>
            <if test="condition.examId!=null">
                AND examId like CONCAT('%', #{condition.examId} , '%')
            </if>
            <if test="condition.studentName!=null">
                AND studentName like CONCAT('%', #{condition.studentName} , '%')
            </if>
            <if test="condition.className!=null">
                AND className like CONCAT('%', #{condition.className} , '%')
            </if>
            <if test="condition.yuWenScore!=null">
                AND yuWenScore like CONCAT('%', #{condition.yuWenScore} , '%')
            </if>
            <if test="condition.shuXueScore!=null">
                AND shuXueScore like CONCAT('%', #{condition.shuXueScore} , '%')
            </if>
            <if test="condition.yingYuScore!=null">
                AND yingYuScore like CONCAT('%', #{condition.yingYuScore} , '%')
            </if>
            <if test="condition.wuLiScore!=null">
                AND wuLiScore like CONCAT('%', #{condition.wuLiScore} , '%')
            </if>
            <if test="condition.huaXueScore!=null">
                AND huaXueScore like CONCAT('%', #{condition.huaXueScore} , '%')
            </if>
            <if test="condition.shengWuScore!=null">
                AND shengWuScore like CONCAT('%', #{condition.shengWuScore} , '%')
            </if>
            <if test="condition.zhengZhiScore!=null">
                AND zhengZhiScore like CONCAT('%', #{condition.zhengZhiScore} , '%')
            </if>
            <if test="condition.diLiScore!=null">
                AND diLiScore like CONCAT('%', #{condition.diLiScore} , '%')
            </if>
            <if test="condition.liShiScore!=null">
                AND liShiScore like CONCAT('%', #{condition.liShiScore} , '%')
            </if>
            <if test="condition.commonScore!=null">
                AND commonScore like CONCAT('%', #{condition.commonScore} , '%')
            </if>
            <if test="condition.totleScore!=null">
                AND totleScore like CONCAT('%', #{condition.totleScore} , '%')
            </if>
            <if test="condition.classRank!=null">
                AND classRank like CONCAT('%', #{condition.classRank} , '%')
            </if>
            <if test="condition.gradeRank!=null">
                AND gradeRank like CONCAT('%', #{condition.gradeRank} , '%')
            </if>
            <if test="condition.selectCourses!=null">
                AND selectCourses like CONCAT('%', #{condition.selectCourses} , '%')
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>


    <select id="queryList" parameterType="java.util.Map" resultType="ExamDetail">
        SELECT
        <if test="selector!=null">
            <trim prefixOverrides=",">
                <if test="selector.id!=null">
                    , id
                </if>
                <if test="selector.examId!=null">
                    , examId
                </if>
                <if test="selector.studentName!=null">
                    , studentName
                </if>
                <if test="selector.className!=null">
                    , className
                </if>
                <if test="selector.yuWenScore!=null">
                    , yuWenScore
                </if>
                <if test="selector.shuXueScore!=null">
                    , shuXueScore
                </if>
                <if test="selector.yingYuScore!=null">
                    , yingYuScore
                </if>
                <if test="selector.wuLiScore!=null">
                    , wuLiScore
                </if>
                <if test="selector.huaXueScore!=null">
                    , huaXueScore
                </if>
                <if test="selector.shengWuScore!=null">
                    , shengWuScore
                </if>
                <if test="selector.zhengZhiScore!=null">
                    , zhengZhiScore
                </if>
                <if test="selector.diLiScore!=null">
                    , diLiScore
                </if>
                <if test="selector.liShiScore!=null">
                    , liShiScore
                </if>
                <if test="selector.commonScore!=null">
                    , commonScore
                </if>
                <if test="selector.totleScore!=null">
                    , totleScore
                </if>
                <if test="selector.classRank!=null">
                    , classRank
                </if>
                <if test="selector.gradeRank!=null">
                    , gradeRank
                </if>
                <if test="selector.selectCourses!=null">
                    , selectCourses
                </if>
        </trim>
    </if>
<if test="selector==null">
<include refid="Base_Column_List" />
</if>
        FROM saas_exam_detail
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.examId!=null">
                AND examId = #{condition.examId}
            </if>
            <if test="condition.studentName!=null">
                AND studentName = #{condition.studentName}
            </if>
            <if test="condition.className!=null">
                AND className = #{condition.className}
            </if>
            <if test="condition.yuWenScore!=null">
                AND yuWenScore = #{condition.yuWenScore}
            </if>
            <if test="condition.shuXueScore!=null">
                AND shuXueScore = #{condition.shuXueScore}
            </if>
            <if test="condition.yingYuScore!=null">
                AND yingYuScore = #{condition.yingYuScore}
            </if>
            <if test="condition.wuLiScore!=null">
                AND wuLiScore = #{condition.wuLiScore}
            </if>
            <if test="condition.huaXueScore!=null">
                AND huaXueScore = #{condition.huaXueScore}
            </if>
            <if test="condition.shengWuScore!=null">
                AND shengWuScore = #{condition.shengWuScore}
            </if>
            <if test="condition.zhengZhiScore!=null">
                AND zhengZhiScore = #{condition.zhengZhiScore}
            </if>
            <if test="condition.diLiScore!=null">
                AND diLiScore = #{condition.diLiScore}
            </if>
            <if test="condition.liShiScore!=null">
                AND liShiScore = #{condition.liShiScore}
            </if>
            <if test="condition.commonScore!=null">
                AND commonScore = #{condition.commonScore}
            </if>
            <if test="condition.totleScore!=null">
                AND totleScore = #{condition.totleScore}
            </if>
            <if test="condition.classRank!=null">
                AND classRank = #{condition.classRank}
            </if>
            <if test="condition.gradeRank!=null">
                AND gradeRank = #{condition.gradeRank}
            </if>
            <if test="condition.selectCourses!=null">
                AND selectCourses = #{condition.selectCourses}
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryOne" parameterType="java.util.Map" resultType="ExamDetail">
        SELECT
        <if test="selector!=null">
            <trim prefixOverrides=",">
                    <if test="selector.id!=null">
                        , id
                    </if>
                    <if test="selector.examId!=null">
                        , examId
                    </if>
                    <if test="selector.studentName!=null">
                        , studentName
                    </if>
                    <if test="selector.className!=null">
                        , className
                    </if>
                    <if test="selector.yuWenScore!=null">
                        , yuWenScore
                    </if>
                    <if test="selector.shuXueScore!=null">
                        , shuXueScore
                    </if>
                    <if test="selector.yingYuScore!=null">
                        , yingYuScore
                    </if>
                    <if test="selector.wuLiScore!=null">
                        , wuLiScore
                    </if>
                    <if test="selector.huaXueScore!=null">
                        , huaXueScore
                    </if>
                    <if test="selector.shengWuScore!=null">
                        , shengWuScore
                    </if>
                    <if test="selector.zhengZhiScore!=null">
                        , zhengZhiScore
                    </if>
                    <if test="selector.diLiScore!=null">
                        , diLiScore
                    </if>
                    <if test="selector.liShiScore!=null">
                        , liShiScore
                    </if>
                    <if test="selector.commonScore!=null">
                        , commonScore
                    </if>
                    <if test="selector.totleScore!=null">
                        , totleScore
                    </if>
                    <if test="selector.classRank!=null">
                        , classRank
                    </if>
                    <if test="selector.gradeRank!=null">
                        , gradeRank
                    </if>
                    <if test="selector.selectCourses!=null">
                        , selectCourses
                    </if>
            </trim>
        </if>
        <if test="selector==null">
            <include refid="Base_Column_List" />
        </if>
        FROM saas_exam_detail
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.examId!=null">
                AND examId = #{condition.examId}
            </if>
            <if test="condition.studentName!=null">
                AND studentName = #{condition.studentName}
            </if>
            <if test="condition.className!=null">
                AND className = #{condition.className}
            </if>
            <if test="condition.yuWenScore!=null">
                AND yuWenScore = #{condition.yuWenScore}
            </if>
            <if test="condition.shuXueScore!=null">
                AND shuXueScore = #{condition.shuXueScore}
            </if>
            <if test="condition.yingYuScore!=null">
                AND yingYuScore = #{condition.yingYuScore}
            </if>
            <if test="condition.wuLiScore!=null">
                AND wuLiScore = #{condition.wuLiScore}
            </if>
            <if test="condition.huaXueScore!=null">
                AND huaXueScore = #{condition.huaXueScore}
            </if>
            <if test="condition.shengWuScore!=null">
                AND shengWuScore = #{condition.shengWuScore}
            </if>
            <if test="condition.zhengZhiScore!=null">
                AND zhengZhiScore = #{condition.zhengZhiScore}
            </if>
            <if test="condition.diLiScore!=null">
                AND diLiScore = #{condition.diLiScore}
            </if>
            <if test="condition.liShiScore!=null">
                AND liShiScore = #{condition.liShiScore}
            </if>
            <if test="condition.commonScore!=null">
                AND commonScore = #{condition.commonScore}
            </if>
            <if test="condition.totleScore!=null">
                AND totleScore = #{condition.totleScore}
            </if>
            <if test="condition.classRank!=null">
                AND classRank = #{condition.classRank}
            </if>
            <if test="condition.gradeRank!=null">
                AND gradeRank = #{condition.gradeRank}
            </if>
            <if test="condition.selectCourses!=null">
                AND selectCourses = #{condition.selectCourses}
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
        limit 0,1
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT count(id) FROM saas_exam_detail
       <where>
           <if test="id!=null">
               ${groupOp} ${id.field} ${id.op}  #{id.data}
           </if>
           <if test="examId!=null">
               ${groupOp} ${examId.field} ${examId.op}  #{examId.data}
           </if>
           <if test="studentName!=null">
               ${groupOp} ${studentName.field} ${studentName.op}  #{studentName.data}
           </if>
           <if test="className!=null">
               ${groupOp} ${className.field} ${className.op}  #{className.data}
           </if>
           <if test="yuWenScore!=null">
               ${groupOp} ${yuWenScore.field} ${yuWenScore.op}  #{yuWenScore.data}
           </if>
           <if test="shuXueScore!=null">
               ${groupOp} ${shuXueScore.field} ${shuXueScore.op}  #{shuXueScore.data}
           </if>
           <if test="yingYuScore!=null">
               ${groupOp} ${yingYuScore.field} ${yingYuScore.op}  #{yingYuScore.data}
           </if>
           <if test="wuLiScore!=null">
               ${groupOp} ${wuLiScore.field} ${wuLiScore.op}  #{wuLiScore.data}
           </if>
           <if test="huaXueScore!=null">
               ${groupOp} ${huaXueScore.field} ${huaXueScore.op}  #{huaXueScore.data}
           </if>
           <if test="shengWuScore!=null">
               ${groupOp} ${shengWuScore.field} ${shengWuScore.op}  #{shengWuScore.data}
           </if>
           <if test="zhengZhiScore!=null">
               ${groupOp} ${zhengZhiScore.field} ${zhengZhiScore.op}  #{zhengZhiScore.data}
           </if>
           <if test="diLiScore!=null">
               ${groupOp} ${diLiScore.field} ${diLiScore.op}  #{diLiScore.data}
           </if>
           <if test="liShiScore!=null">
               ${groupOp} ${liShiScore.field} ${liShiScore.op}  #{liShiScore.data}
           </if>
           <if test="commonScore!=null">
               ${groupOp} ${commonScore.field} ${commonScore.op}  #{commonScore.data}
           </if>
           <if test="totleScore!=null">
               ${groupOp} ${totleScore.field} ${totleScore.op}  #{totleScore.data}
           </if>
           <if test="classRank!=null">
               ${groupOp} ${classRank.field} ${classRank.op}  #{classRank.data}
           </if>
           <if test="gradeRank!=null">
               ${groupOp} ${gradeRank.field} ${gradeRank.op}  #{gradeRank.data}
           </if>
           <if test="selectCourses!=null">
               ${groupOp} ${selectCourses.field} ${selectCourses.op}  #{selectCourses.data}
           </if>

       </where>
    </select>

    <select id="selectMaxId" resultType="java.lang.Long">
        SELECT
        MAX(id)
        FROM saas_exam_detail
    </select>

    <select id="getOverLineNumberByDate" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select exam.id,exam.examTime,count(1) as total
        from saas_exam exam
        inner join saas_exam_detail detail on exam.id=detail.examId
        where exam.grade=${grade} and CAST(detail.totleScore as SIGNED)>=${lineScore}
        group by exam.id,exam.examTime
        order by exam.examTime asc
    </select>

    <select id="getEnrollingNumberInfo"  parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT batch_1_enrolls as batchOne, batch_2_enrolls as batchTwo, batch_3_enrolls as batchThr
        FROM saas_enrolling_ratio ratio
        where ratio.tn_id=${tnId}
        order by ratio.year desc,ratio.create_date DESC
        limit 1
    </select>

    <select id="getLastExamIdByGrade" parameterType="java.util.HashMap" resultType="java.lang.String">
        select exam.id
        from saas_exam exam
        where exam.grade=${grade}
        order by exam.examTime desc
        limit 0,${limitNumber}
    </select>
    
    <select id="getAvgScoresByExamId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select
        ROUND(AVG(IF(d.yuWenScore='', null, d.yuWenScore)), 2) 语文,
        ROUND(AVG(IF(d.shuXueScore='', null, d.shuXueScore)), 2) 数学,
        ROUND(AVG(IF(d.yingYuScore='', null, d.yingYuScore)), 2) 英语,
        ROUND(AVG(IF(d.wuLiScore='', null, d.wuLiScore)), 2) 物理,
        ROUND(AVG(IF(d.huaXueScore='', null, d.huaXueScore)), 2) 化学,
        ROUND(AVG(IF(d.shengWuScore='', null, d.shengWuScore)), 2) 生物,
        ROUND(AVG(IF(d.zhengZhiScore='', null, d.zhengZhiScore)), 2) 政治,
        ROUND(AVG(IF(d.diLiScore='', null, d.diLiScore)), 2) 地理,
        ROUND(AVG(IF(d.liShiScore='', null, d.liShiScore)), 2) 历史,
        ROUND(AVG(IF(d.commonScore='', null, d.commonScore)), 2) 通用技术
        from saas_exam_detail d
        where d.examId = #{examId}
    </select>

    <select id="getMostAttentionNumberChart" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
        select d.className,count(1) total
        from saas_exam_stu_weak_course c
        inner join saas_exam_detail d on c.examDetailId=d.id
        where c.examId=#{examId} and c.batchName=#{batchName}
        group by d.className
        order by total desc
    </select>

    <select id="getMostAttentionCourseChart" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
        select courseName,CAST(total1 as SIGNED) + CAST(total2 AS SIGNED) total
        FROM
        (select *
        from (select c.weakCourseOne courseName,count(1) total1
        from saas_exam_stu_weak_course c
        where c.examId=#{examId} and c.batchName=#{batchName}
        group by courseName
        order by total1 desc) t
        inner join
        (select c.weakCourseTwo courseName2,count(1) total2
        from saas_exam_stu_weak_course c
        where c.examId=#{examId} and c.batchName=#{batchName}
        group by courseName2
        order by total2 desc) s on t.courseName=s.courseName2) tb
        order by total desc
    </select>


    <select id="getMostAttentionPage" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
        select d.studentName,d.className,c.weakCourseOne,c.weakCourseTwo
        from saas_exam_stu_weak_course c
        left join saas_exam_detail d on c.examDetailId=d.id
        where c.examId=#{examId} and c.batchName=#{batchName}
        <if test="className!=null">
            AND className = #{className}
        </if>
        <if test="courseName!=null">
            AND weakCourseOne = #{courseName}
            UNION ALL
            select d.studentName,d.className,c.weakCourseOne,c.weakCourseTwo
            from saas_exam_stu_weak_course c
            left join saas_exam_detail d on c.examDetailId=d.id
            where c.examId=#{examId} and c.batchName=#{batchName}
            <if test="className!=null">
                AND className = #{className}
            </if>
            AND weakCourseOne = #{courseName}
        </if>
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
        <if test="offset != null">
            limit ${offset}, ${rows}
        </if>
    </select>
    <select id="getAvgScoresForClass" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select d.className,e.examTime, ROUND(AVG(IF(d.yuWenScore='', null, d.yuWenScore)), 2) 语文,
        ROUND(AVG(IF(d.shuXueScore='', null, d.shuXueScore)), 2) 数学,
        ROUND(AVG(IF(d.yingYuScore='', null, d.yingYuScore)), 2) 英语,
        ROUND(AVG(IF(d.wuLiScore='', null, d.wuLiScore)), 2) 物理,
        ROUND(AVG(IF(d.huaXueScore='', null, d.huaXueScore)), 2) 化学,
        ROUND(AVG(IF(d.shengWuScore='', null, d.shengWuScore)), 2) 生物,
        ROUND(AVG(IF(d.zhengZhiScore='', null, d.zhengZhiScore)), 2) 政治,
        ROUND(AVG(IF(d.diLiScore='', null, d.diLiScore)), 2) 地理,
        ROUND(AVG(IF(d.liShiScore='', null, d.liShiScore)), 2) 历史,
        ROUND(AVG(IF(d.commonScore='', null, d.commonScore)), 2) 通用技术
        from saas_exam_detail d
        LEFT JOIN saas_exam e on d.examId=e.id
        WHERE d.className=#{className}
        group by d.className,e.examTime
        order by e.id desc
    </select>
    
    <select id="getClassesNameByGrade" parameterType="java.util.HashMap" resultType="java.lang.String">
        select t.class_name
        from ${tableName} t
        where t.class_grade= #{grade}
    </select>
</mapper>

